#![allow(dead_code)]

#[derive(Debug)]
pub enum SourceLanguage {
    SourceLanguageUnknown = 0,
    SourceLanguageESSL = 1,
    SourceLanguageGLSL = 2,
    SourceLanguageOpenCL = 3,
}

#[derive(Debug)]
#[repr(u32)]
pub enum ExecutionModel {
    ExecutionModelVertex = 0,
    ExecutionModelTessellationControl = 1,
    ExecutionModelTessellationEvaluation = 2,
    ExecutionModelGeometry = 3,
    ExecutionModelFragment = 4,
    ExecutionModelGLCompute = 5,
    ExecutionModelKernel = 6,
}

#[derive(Debug)]
#[repr(u32)]
pub enum AddressingModel {
    AddressingModelLogical = 0,
    AddressingModelPhysical32 = 1,
    AddressingModelPhysical64 = 2,
}

#[derive(Debug)]
#[repr(u32)]
pub enum MemoryModel {
    MemoryModelSimple = 0,
    MemoryModelGLSL450 = 1,
    MemoryModelOpenCL = 2,
}

#[derive(Debug)]
pub enum ExecutionMode {
    ExecutionModeInvocations = 0,
    ExecutionModeSpacingEqual = 1,
    ExecutionModeSpacingFractionalEven = 2,
    ExecutionModeSpacingFractionalOdd = 3,
    ExecutionModeVertexOrderCw = 4,
    ExecutionModeVertexOrderCcw = 5,
    ExecutionModePixelCenterInteger = 6,
    ExecutionModeOriginUpperLeft = 7,
    ExecutionModeOriginLowerLeft = 8,
    ExecutionModeEarlyFragmentTests = 9,
    ExecutionModePointMode = 10,
    ExecutionModeXfb = 11,
    ExecutionModeDepthReplacing = 12,
    ExecutionModeDepthAny = 13,
    ExecutionModeDepthGreater = 14,
    ExecutionModeDepthLess = 15,
    ExecutionModeDepthUnchanged = 16,
    ExecutionModeLocalSize = 17,
    ExecutionModeLocalSizeHint = 18,
    ExecutionModeInputPoints = 19,
    ExecutionModeInputLines = 20,
    ExecutionModeInputLinesAdjacency = 21,
    ExecutionModeInputTriangles = 22,
    ExecutionModeInputTrianglesAdjacency = 23,
    ExecutionModeInputQuads = 24,
    ExecutionModeInputIsolines = 25,
    ExecutionModeOutputVertices = 26,
    ExecutionModeOutputPoints = 27,
    ExecutionModeOutputLineStrip = 28,
    ExecutionModeOutputTriangleStrip = 29,
    ExecutionModeVecTypeHint = 30,
    ExecutionModeContractionOff = 31,
}

#[derive(Debug)]
pub enum StorageClass {
    StorageClassUniformConstant = 0,
    StorageClassInput = 1,
    StorageClassUniform = 2,
    StorageClassOutput = 3,
    StorageClassWorkgroupLocal = 4,
    StorageClassWorkgroupGlobal = 5,
    StorageClassPrivateGlobal = 6,
    StorageClassFunction = 7,
    StorageClassGeneric = 8,
    StorageClassAtomicCounter = 10,
    StorageClassImage = 11,
}

#[derive(Debug)]
pub enum Dim {
    Dim1D = 0,
    Dim2D = 1,
    Dim3D = 2,
    DimCube = 3,
    DimRect = 4,
    DimBuffer = 5,
}

#[derive(Debug)]
pub enum SamplerAddressingMode {
    SamplerAddressingModeNone = 0,
    SamplerAddressingModeClampToEdge = 1,
    SamplerAddressingModeClamp = 2,
    SamplerAddressingModeRepeat = 3,
    SamplerAddressingModeRepeatMirrored = 4,
}

#[derive(Debug)]
pub enum SamplerFilterMode {
    SamplerFilterModeNearest = 0,
    SamplerFilterModeLinear = 1,
}

#[derive(Debug)]
pub enum ImageFormat {
    ImageFormatUnknown = 0,
    ImageFormatRgba32f = 1,
    ImageFormatRgba16f = 2,
    ImageFormatR32f = 3,
    ImageFormatRgba8 = 4,
    ImageFormatRgba8Snorm = 5,
    ImageFormatRg32f = 6,
    ImageFormatRg16f = 7,
    ImageFormatR11fG11fB10f = 8,
    ImageFormatR16f = 9,
    ImageFormatRgba16 = 10,
    ImageFormatRgb10A2 = 11,
    ImageFormatRg16 = 12,
    ImageFormatRg8 = 13,
    ImageFormatR16 = 14,
    ImageFormatR8 = 15,
    ImageFormatRgba16Snorm = 16,
    ImageFormatRg16Snorm = 17,
    ImageFormatRg8Snorm = 18,
    ImageFormatR16Snorm = 19,
    ImageFormatR8Snorm = 20,
    ImageFormatRgba32i = 21,
    ImageFormatRgba16i = 22,
    ImageFormatRgba8i = 23,
    ImageFormatR32i = 24,
    ImageFormatRg32i = 25,
    ImageFormatRg16i = 26,
    ImageFormatRg8i = 27,
    ImageFormatR16i = 28,
    ImageFormatR8i = 29,
    ImageFormatRgba32ui = 30,
    ImageFormatRgba16ui = 31,
    ImageFormatRgba8ui = 32,
    ImageFormatR32ui = 33,
    ImageFormatRgb10a2ui = 34,
    ImageFormatRg32ui = 35,
    ImageFormatRg16ui = 36,
    ImageFormatRg8ui = 37,
    ImageFormatR16ui = 38,
    ImageFormatR8ui = 39,
}

#[derive(Debug)]
pub enum ImageChannelOrder {
    ImageChannelOrderR = 0,
    ImageChannelOrderA = 1,
    ImageChannelOrderRG = 2,
    ImageChannelOrderRA = 3,
    ImageChannelOrderRGB = 4,
    ImageChannelOrderRGBA = 5,
    ImageChannelOrderBGRA = 6,
    ImageChannelOrderARGB = 7,
    ImageChannelOrderIntensity = 8,
    ImageChannelOrderLuminance = 9,
    ImageChannelOrderRx = 10,
    ImageChannelOrderRGx = 11,
    ImageChannelOrderRGBx = 12,
    ImageChannelOrderDepth = 13,
    ImageChannelOrderDepthStencil = 14,
    ImageChannelOrdersRGB = 15,
    ImageChannelOrdersRGBx = 16,
    ImageChannelOrdersRGBA = 17,
    ImageChannelOrdersBGRA = 18,
}

#[derive(Debug)]
pub enum ImageChannelDataType {
    ImageChannelDataTypeSnormInt8 = 0,
    ImageChannelDataTypeSnormInt16 = 1,
    ImageChannelDataTypeUnormInt8 = 2,
    ImageChannelDataTypeUnormInt16 = 3,
    ImageChannelDataTypeUnormShort565 = 4,
    ImageChannelDataTypeUnormShort555 = 5,
    ImageChannelDataTypeUnormInt101010 = 6,
    ImageChannelDataTypeSignedInt8 = 7,
    ImageChannelDataTypeSignedInt16 = 8,
    ImageChannelDataTypeSignedInt32 = 9,
    ImageChannelDataTypeUnsignedInt8 = 10,
    ImageChannelDataTypeUnsignedInt16 = 11,
    ImageChannelDataTypeUnsignedInt32 = 12,
    ImageChannelDataTypeHalfFloat = 13,
    ImageChannelDataTypeFloat = 14,
    ImageChannelDataTypeUnormInt24 = 15,
}

#[derive(Debug)]
pub enum ImageOperandsShift {
    ImageOperandsBiasShift = 0,
    ImageOperandsLodShift = 1,
    ImageOperandsGradShift = 2,
    ImageOperandsConstOffsetShift = 3,
    ImageOperandsOffsetShift = 4,
    ImageOperandsConstOffsetsShift = 5,
    ImageOperandsSampleShift = 6,
}

#[derive(Debug)]
pub enum ImageOperandsMask {
    ImageOperandsMaskNone = 0,
    ImageOperandsBiasMask = 0x00000001,
    ImageOperandsLodMask = 0x00000002,
    ImageOperandsGradMask = 0x00000004,
    ImageOperandsConstOffsetMask = 0x00000008,
    ImageOperandsOffsetMask = 0x00000010,
    ImageOperandsConstOffsetsMask = 0x00000020,
    ImageOperandsSampleMask = 0x00000040,
}

#[derive(Debug)]
pub enum FPFastMathModeShift {
    FPFastMathModeNotNaNShift = 0,
    FPFastMathModeNotInfShift = 1,
    FPFastMathModeNSZShift = 2,
    FPFastMathModeAllowRecipShift = 3,
    FPFastMathModeFastShift = 4,
}

#[derive(Debug)]
pub enum FPFastMathModeMask {
    FPFastMathModeMaskNone = 0,
    FPFastMathModeNotNaNMask = 0x00000001,
    FPFastMathModeNotInfMask = 0x00000002,
    FPFastMathModeNSZMask = 0x00000004,
    FPFastMathModeAllowRecipMask = 0x00000008,
    FPFastMathModeFastMask = 0x00000010,
}

#[derive(Debug)]
pub enum FPRoundingMode {
    FPRoundingModeRTE = 0,
    FPRoundingModeRTZ = 1,
    FPRoundingModeRTP = 2,
    FPRoundingModeRTN = 3,
}

#[derive(Debug)]
pub enum LinkageType {
    LinkageTypeExport = 0,
    LinkageTypeImport = 1,
}

#[derive(Debug)]
pub enum AccessQualifier {
    AccessQualifierReadOnly = 0,
    AccessQualifierWriteOnly = 1,
    AccessQualifierReadWrite = 2,
}

#[derive(Debug)]
pub enum FunctionParameterAttribute {
    FunctionParameterAttributeZext = 0,
    FunctionParameterAttributeSext = 1,
    FunctionParameterAttributeByVal = 2,
    FunctionParameterAttributeSret = 3,
    FunctionParameterAttributeNoAlias = 4,
    FunctionParameterAttributeNoCapture = 5,
    FunctionParameterAttributeNoWrite = 6,
    FunctionParameterAttributeNoReadWrite = 7,
}

#[derive(Debug)]
pub enum Decoration {
    DecorationRelaxedPrecision = 0,
    DecorationSpecId = 1,
    DecorationBlock = 2,
    DecorationBufferBlock = 3,
    DecorationRowMajor = 4,
    DecorationColMajor = 5,
    DecorationArrayStride = 6,
    DecorationMatrixStride = 7,
    DecorationGLSLShared = 8,
    DecorationGLSLPacked = 9,
    DecorationCPacked = 10,
    DecorationBuiltIn = 11,
    DecorationSmooth = 12,
    DecorationNoperspective = 13,
    DecorationFlat = 14,
    DecorationPatch = 15,
    DecorationCentroid = 16,
    DecorationSample = 17,
    DecorationInvariant = 18,
    DecorationRestrict = 19,
    DecorationAliased = 20,
    DecorationVolatile = 21,
    DecorationConstant = 22,
    DecorationCoherent = 23,
    DecorationNonwritable = 24,
    DecorationNonreadable = 25,
    DecorationUniform = 26,
    DecorationNoStaticUse = 27,
    DecorationSaturatedConversion = 28,
    DecorationStream = 29,
    DecorationLocation = 30,
    DecorationComponent = 31,
    DecorationIndex = 32,
    DecorationBinding = 33,
    DecorationDescriptorSet = 34,
    DecorationOffset = 35,
    DecorationXfbBuffer = 36,
    DecorationXfbStride = 37,
    DecorationFuncParamAttr = 38,
    DecorationFPRoundingMode = 39,
    DecorationFPFastMathMode = 40,
    DecorationLinkageAttributes = 41,
}

#[derive(Debug)]
pub enum BuiltIn {
    BuiltInPosition = 0,
    BuiltInPointSize = 1,
    BuiltInClipDistance = 3,
    BuiltInCullDistance = 4,
    BuiltInVertexId = 5,
    BuiltInInstanceId = 6,
    BuiltInPrimitiveId = 7,
    BuiltInInvocationId = 8,
    BuiltInLayer = 9,
    BuiltInViewportIndex = 10,
    BuiltInTessLevelOuter = 11,
    BuiltInTessLevelInner = 12,
    BuiltInTessCoord = 13,
    BuiltInPatchVertices = 14,
    BuiltInFragCoord = 15,
    BuiltInPointCoord = 16,
    BuiltInFrontFacing = 17,
    BuiltInSampleId = 18,
    BuiltInSamplePosition = 19,
    BuiltInSampleMask = 20,
    BuiltInFragColor = 21,
    BuiltInFragDepth = 22,
    BuiltInHelperInvocation = 23,
    BuiltInNumWorkgroups = 24,
    BuiltInWorkgroupSize = 25,
    BuiltInWorkgroupId = 26,
    BuiltInLocalInvocationId = 27,
    BuiltInGlobalInvocationId = 28,
    BuiltInLocalInvocationIndex = 29,
    BuiltInWorkDim = 30,
    BuiltInGlobalSize = 31,
    BuiltInEnqueuedWorkgroupSize = 32,
    BuiltInGlobalOffset = 33,
    BuiltInGlobalLinearId = 34,
    BuiltInWorkgroupLinearId = 35,
    BuiltInSubgroupSize = 36,
    BuiltInSubgroupMaxSize = 37,
    BuiltInNumSubgroups = 38,
    BuiltInNumEnqueuedSubgroups = 39,
    BuiltInSubgroupId = 40,
    BuiltInSubgroupLocalInvocationId = 41,
}

#[derive(Debug)]
pub enum SelectionControlShift {
    SelectionControlFlattenShift = 0,
    SelectionControlDontFlattenShift = 1,
}

#[derive(Debug)]
pub enum SelectionControlMask {
    SelectionControlMaskNone = 0,
    SelectionControlFlattenMask = 0x00000001,
    SelectionControlDontFlattenMask = 0x00000002,
}

#[derive(Debug)]
pub enum LoopControlShift {
    LoopControlUnrollShift = 0,
    LoopControlDontUnrollShift = 1,
}

#[derive(Debug)]
pub enum LoopControlMask {
    LoopControlMaskNone = 0,
    LoopControlUnrollMask = 0x00000001,
    LoopControlDontUnrollMask = 0x00000002,
}

#[derive(Debug)]
pub enum FunctionControlShift {
    FunctionControlInlineShift = 0,
    FunctionControlDontInlineShift = 1,
    FunctionControlPureShift = 2,
    FunctionControlConstShift = 3,
}

#[derive(Debug)]
pub enum FunctionControlMask {
    FunctionControlMaskNone = 0,
    FunctionControlInlineMask = 0x00000001,
    FunctionControlDontInlineMask = 0x00000002,
    FunctionControlPureMask = 0x00000004,
    FunctionControlConstMask = 0x00000008,
}

#[derive(Debug)]
pub enum MemorySemanticsShift {
    MemorySemanticsRelaxedShift = 0,
    MemorySemanticsSequentiallyConsistentShift = 1,
    MemorySemanticsAcquireShift = 2,
    MemorySemanticsReleaseShift = 3,
    MemorySemanticsUniformMemoryShift = 4,
    MemorySemanticsSubgroupMemoryShift = 5,
    MemorySemanticsWorkgroupLocalMemoryShift = 6,
    MemorySemanticsWorkgroupGlobalMemoryShift = 7,
    MemorySemanticsAtomicCounterMemoryShift = 8,
    MemorySemanticsImageMemoryShift = 9,
}

#[derive(Debug)]
pub enum MemorySemanticsMask {
    MemorySemanticsMaskNone = 0,
    MemorySemanticsRelaxedMask = 0x00000001,
    MemorySemanticsSequentiallyConsistentMask = 0x00000002,
    MemorySemanticsAcquireMask = 0x00000004,
    MemorySemanticsReleaseMask = 0x00000008,
    MemorySemanticsUniformMemoryMask = 0x00000010,
    MemorySemanticsSubgroupMemoryMask = 0x00000020,
    MemorySemanticsWorkgroupLocalMemoryMask = 0x00000040,
    MemorySemanticsWorkgroupGlobalMemoryMask = 0x00000080,
    MemorySemanticsAtomicCounterMemoryMask = 0x00000100,
    MemorySemanticsImageMemoryMask = 0x00000200,
}

#[derive(Debug)]
pub enum MemoryAccessShift {
    MemoryAccessVolatileShift = 0,
    MemoryAccessAlignedShift = 1,
}

#[derive(Debug)]
pub enum MemoryAccessMask {
    MemoryAccessMaskNone = 0,
    MemoryAccessVolatileMask = 0x00000001,
    MemoryAccessAlignedMask = 0x00000002,
}

#[derive(Debug)]
pub enum Scope {
    ScopeCrossDevice = 0,
    ScopeDevice = 1,
    ScopeWorkgroup = 2,
    ScopeSubgroup = 3,
    ScopeInvocation = 4,
}

#[derive(Debug)]
pub enum GroupOperation {
    GroupOperationReduce = 0,
    GroupOperationInclusiveScan = 1,
    GroupOperationExclusiveScan = 2,
}

#[derive(Debug)]
pub enum KernelEnqueueFlags {
    KernelEnqueueFlagsNoWait = 0,
    KernelEnqueueFlagsWaitKernel = 1,
    KernelEnqueueFlagsWaitWorkGroup = 2,
}

#[derive(Debug)]
pub enum KernelProfilingInfoShift {
    KernelProfilingInfoCmdExecTimeShift = 0,
}

#[derive(Debug)]
pub enum KernelProfilingInfoMask {
    KernelProfilingInfoMaskNone = 0,
    KernelProfilingInfoCmdExecTimeMask = 0x00000001,
}

#[derive(Debug)]
pub enum Capability {
    CapabilityMatrix = 0,
    CapabilityShader = 1,
    CapabilityGeometry = 2,
    CapabilityTessellation = 3,
    CapabilityAddresses = 4,
    CapabilityLinkage = 5,
    CapabilityKernel = 6,
    CapabilityVector16 = 7,
    CapabilityFloat16Buffer = 8,
    CapabilityFloat16 = 9,
    CapabilityFloat64 = 10,
    CapabilityInt64 = 11,
    CapabilityInt64Atomics = 12,
    CapabilityImageBasic = 13,
    CapabilityImageReadWrite = 14,
    CapabilityImageMipmap = 15,
    CapabilityImageSRGBWrite = 16,
    CapabilityPipes = 17,
    CapabilityGroups = 18,
    CapabilityDeviceEnqueue = 19,
    CapabilityLiteralSampler = 20,
    CapabilityAtomicStorage = 21,
    CapabilityInt16 = 22,
    CapabilityTessellationPointSize = 23,
    CapabilityGeometryPointSize = 24,
    CapabilityImageGatherExtended = 25,
    CapabilityStorageImageExtendedFormats = 26,
    CapabilityStorageImageMultisample = 27,
    CapabilityUniformBufferArrayDynamicIndexing = 28,
    CapabilitySampledImageArrayDynamicIndexing = 29,
    CapabilityStorageBufferArrayDynamicIndexing = 30,
    CapabilityStorageImageArrayDynamicIndexing = 31,
    CapabilityClipDistance = 32,
    CapabilityCullDistance = 33,
    CapabilityImageCubeArray = 34,
    CapabilitySampleRateShading = 35,
}

#[derive(Debug, Clone, Copy, Eq, PartialEq)]
#[repr(u16)]
pub enum Op {
    OpNop = 0,
    OpSource = 1,
    OpSourceExtension = 2,
    OpExtension = 3,
    OpExtInstImport = 4,
    OpMemoryModel = 5,
    OpEntryPoint = 6,
    OpExecutionMode = 7,
    OpTypeVoid = 8,
    OpTypeBool = 9,
    OpTypeInt = 10,
    OpTypeFloat = 11,
    OpTypeVector = 12,
    OpTypeMatrix = 13,
    OpTypeSampler = 14,
    OpTypeFilter = 15,
    OpTypeArray = 16,
    OpTypeRuntimeArray = 17,
    OpTypeStruct = 18,
    OpTypeOpaque = 19,
    OpTypePointer = 20,
    OpTypeFunction = 21,
    OpTypeEvent = 22,
    OpTypeDeviceEvent = 23,
    OpTypeReserveId = 24,
    OpTypeQueue = 25,
    OpTypePipe = 26,
    OpConstantTrue = 27,
    OpConstantFalse = 28,
    OpConstant = 29,
    OpConstantComposite = 30,
    OpConstantSampler = 31,
    OpConstantNullPointer = 32,
    OpConstantNullObject = 33,
    OpSpecConstantTrue = 34,
    OpSpecConstantFalse = 35,
    OpSpecConstant = 36,
    OpSpecConstantComposite = 37,
    OpVariable = 38,
    OpVariableArray = 39,
    OpFunction = 40,
    OpFunctionParameter = 41,
    OpFunctionEnd = 42,
    OpFunctionCall = 43,
    OpExtInst = 44,
    OpUndef = 45,
    OpLoad = 46,
    OpStore = 47,
    OpPhi = 48,
    OpDecorationGroup = 49,
    OpDecorate = 50,
    OpMemberDecorate = 51,
    OpGroupDecorate = 52,
    OpGroupMemberDecorate = 53,
    OpName = 54,
    OpMemberName = 55,
    OpString = 56,
    OpLine = 57,
    OpVectorExtractDynamic = 58,
    OpVectorInsertDynamic = 59,
    OpVectorShuffle = 60,
    OpCompositeConstruct = 61,
    OpCompositeExtract = 62,
    OpCompositeInsert = 63,
    OpCopyObject = 64,
    OpCopyMemory = 65,
    OpCopyMemorySized = 66,
    OpSampler = 67,
    OpTextureSample = 68,
    OpTextureSampleDref = 69,
    OpTextureSampleLod = 70,
    OpTextureSampleProj = 71,
    OpTextureSampleGrad = 72,
    OpTextureSampleOffset = 73,
    OpTextureSampleProjLod = 74,
    OpTextureSampleProjGrad = 75,
    OpTextureSampleLodOffset = 76,
    OpTextureSampleProjOffset = 77,
    OpTextureSampleGradOffset = 78,
    OpTextureSampleProjLodOffset = 79,
    OpTextureSampleProjGradOffset = 80,
    OpTextureFetchTexel = 81,
    OpTextureFetchTexelOffset = 82,
    OpTextureFetchSample = 83,
    //OpTextureFetchBuffer = 84,
    OpTextureGather = 85,
    OpTextureGatherOffset = 86,
    OpTextureGatherOffsets = 87,
    OpTextureQuerySizeLod = 88,
    OpTextureQuerySize = 89,
    OpTextureQueryLod = 90,
    OpTextureQueryLevels = 91,
    OpTextureQuerySamples = 92,
    OpAccessChain = 93,
    OpInBoundsAccessChain = 94,
    OpSNegate = 95,
    OpFNegate = 96,
    OpNot = 97,
    OpAny = 98,
    OpAll = 99,
    OpConvertFToU = 100,
    OpConvertFToS = 101,
    OpConvertSToF = 102,
    OpConvertUToF = 103,
    OpUConvert = 104,
    OpSConvert = 105,
    OpFConvert = 106,
    OpConvertPtrToU = 107,
    OpConvertUToPtr = 108,
    OpPtrCastToGeneric = 109,
    OpGenericCastToPtr = 110,
    OpBitcast = 111,
    OpTranspose = 112,
    OpIsNan = 113,
    OpIsInf = 114,
    OpIsFinite = 115,
    OpIsNormal = 116,
    OpSignBitSet = 117,
    OpLessOrGreater = 118,
    OpOrdered = 119,
    OpUnordered = 120,
    OpArrayLength = 121,
    OpIAdd = 122,
    OpFAdd = 123,
    OpISub = 124,
    OpFSub = 125,
    OpIMul = 126,
    OpFMul = 127,
    OpUDiv = 128,
    OpSDiv = 129,
    OpFDiv = 130,
    OpUMod = 131,
    OpSRem = 132,
    OpSMod = 133,
    OpFRem = 134,
    OpFMod = 135,
    OpVectorTimesScalar = 136,
    OpMatrixTimesScalar = 137,
    OpVectorTimesMatrix = 138,
    OpMatrixTimesVector = 139,
    OpMatrixTimesMatrix = 140,
    OpOuterProduct = 141,
    OpDot = 142,
    OpShiftRightLogical = 143,
    OpShiftRightArithmetic = 144,
    OpShiftLeftLogical = 145,
    OpLogicalOr = 146,
    OpLogicalXor = 147,
    OpLogicalAnd = 148,
    OpBitwiseOr = 149,
    OpBitwiseXor = 150,
    OpBitwiseAnd = 151,
    OpSelect = 152,
    OpIEqual = 153,
    OpFOrdEqual = 154,
    OpFUnordEqual = 155,
    OpINotEqual = 156,
    OpFOrdNotEqual = 157,
    OpFUnordNotEqual = 158,
    OpULessThan = 159,
    OpSLessThan = 160,
    OpFOrdLessThan = 161,
    OpFUnordLessThan = 162,
    OpUGreaterThan = 163,
    OpSGreaterThan = 164,
    OpFOrdGreaterThan = 165,
    OpFUnordGreaterThan = 166,
    OpULessThanEqual = 167,
    OpSLessThanEqual = 168,
    OpFOrdLessThanEqual = 169,
    OpFUnordLessThanEqual = 170,
    OpUGreaterThanEqual = 171,
    OpSGreaterThanEqual = 172,
    OpFOrdGreaterThanEqual = 173,
    OpFUnordGreaterThanEqual = 174,
    OpDPdx = 175,
    OpDPdy = 176,
    OpFwidth = 177,
    OpDPdxFine = 178,
    OpDPdyFine = 179,
    OpFwidthFine = 180,
    OpDPdxCoarse = 181,
    OpDPdyCoarse = 182,
    OpFwidthCoarse = 183,
    OpEmitVertex = 184,
    OpEndPrimitive = 185,
    OpEmitStreamVertex = 186,
    OpEndStreamPrimitive = 187,
    OpControlBarrier = 188,
    OpMemoryBarrier = 189,
    OpImagePointer = 190,
    OpAtomicInit = 191,
    OpAtomicLoad = 192,
    OpAtomicStore = 193,
    OpAtomicExchange = 194,
    OpAtomicCompareExchange = 195,
    OpAtomicCompareExchangeWeak = 196,
    OpAtomicIIncrement = 197,
    OpAtomicIDecrement = 198,
    OpAtomicIAdd = 199,
    OpAtomicISub = 200,
    OpAtomicUMin = 201,
    OpAtomicUMax = 202,
    OpAtomicAnd = 203,
    OpAtomicOr = 204,
    OpAtomicXor = 205,
    OpLoopMerge = 206,
    OpSelectionMerge = 207,
    OpLabel = 208,
    OpBranch = 209,
    OpBranchConditional = 210,
    OpSwitch = 211,
    OpKill = 212,
    OpReturn = 213,
    OpReturnValue = 214,
    OpUnreachable = 215,
    OpLifetimeStart = 216,
    OpLifetimeStop = 217,
    OpCompileFlag = 218,
    OpAsyncGroupCopy = 219,
    OpWaitGroupEvents = 220,
    OpGroupAll = 221,
    OpGroupAny = 222,
    OpGroupBroadcast = 223,
    OpGroupIAdd = 224,
    OpGroupFAdd = 225,
    OpGroupFMin = 226,
    OpGroupUMin = 227,
    OpGroupSMin = 228,
    OpGroupFMax = 229,
    OpGroupUMax = 230,
    OpGroupSMax = 231,
    OpGenericCastToPtrExplicit = 232,
    OpGenericPtrMemSemantics = 233,
    OpReadPipe = 234,
    OpWritePipe = 235,
    OpReservedReadPipe = 236,
    OpReservedWritePipe = 237,
    OpReserveReadPipePackets = 238,
    OpReserveWritePipePackets = 239,
    OpCommitReadPipe = 240,
    OpCommitWritePipe = 241,
    OpIsValidReserveId = 242,
    OpGetNumPipePackets = 243,
    OpGetMaxPipePackets = 244,
    OpGroupReserveReadPipePackets = 245,
    OpGroupReserveWritePipePackets = 246,
    OpGroupCommitReadPipe = 247,
    OpGroupCommitWritePipe = 248,
    OpEnqueueMarker = 249,
    OpEnqueueKernel = 250,
    OpGetKernelNDrangeSubGroupCount = 251,
    OpGetKernelNDrangeMaxSubGroupSize = 252,
    OpGetKernelWorkGroupSize = 253,
    OpGetKernelPreferredWorkGroupSizeMultiple = 254,
    OpRetainEvent = 255,
    OpReleaseEvent = 256,
    OpCreateUserEvent = 257,
    OpIsValidEvent = 258,
    OpSetUserEventStatus = 259,
    OpCaptureEventProfilingInfo = 260,
    OpGetDefaultQueue = 261,
    OpBuildNDRange = 262,
    OpLastValue = 263
}

#[derive(Debug, Clone, Copy, Eq, PartialEq)]
#[repr(u16)]
pub enum OpOld {
    OpNop = 0,
    OpUndef = 1,
    OpSource = 3,
    OpSourceExtension = 4,
    OpName = 5,
    OpMemberName = 6,
    OpString = 7,
    OpLine = 8,
    OpExtension = 10,
    OpExtInstImport = 11,
    OpExtInst = 12,
    OpMemoryModel = 14,
    OpEntryPoint = 15,
    OpExecutionMode = 16,
    OpCapability = 17,
    OpTypeVoid = 19,
    OpTypeBool = 20,
    OpTypeInt = 21,
    OpTypeFloat = 22,
    OpTypeVector = 23,
    OpTypeMatrix = 24,
    OpTypeImage = 25,
    OpTypeSampler = 26,
    OpTypeSampledImage = 27,
    OpTypeArray = 28,
    OpTypeRuntimeArray = 29,
    OpTypeStruct = 30,
    OpTypeOpaque = 31,
    OpTypePointer = 32,
    OpTypeFunction = 33,
    OpTypeEvent = 34,
    OpTypeDeviceEvent = 35,
    OpTypeReserveId = 36,
    OpTypeQueue = 37,
    OpTypePipe = 38,
    OpConstantTrue = 41,
    OpConstantFalse = 42,
    OpConstant = 43,
    OpConstantComposite = 44,
    OpConstantSampler = 45,
    OpConstantNull = 46,
    OpSpecConstantTrue = 48,
    OpSpecConstantFalse = 49,
    OpSpecConstant = 50,
    OpSpecConstantComposite = 51,
    OpSpecConstantOp = 52,
    OpFunction = 54,
    OpFunctionParameter = 55,
    OpFunctionEnd = 56,
    OpFunctionCall = 57,
    OpVariable = 59,
    OpImageTexelPointer = 60,
    OpLoad = 61,
    OpStore = 62,
    OpCopyMemory = 63,
    OpCopyMemorySized = 64,
    OpAccessChain = 65,
    OpInBoundsAccessChain = 66,
    OpPtrAccessChain = 67,
    OpArrayLength = 68,
    OpGenericPtrMemSemantics = 69,
    OpDecorate = 71,
    OpMemberDecorate = 72,
    OpDecorationGroup = 73,
    OpGroupDecorate = 74,
    OpGroupMemberDecorate = 75,
    OpVectorExtractDynamic = 77,
    OpVectorInsertDynamic = 78,
    OpVectorShuffle = 79,
    OpCompositeConstruct = 80,
    OpCompositeExtract = 81,
    OpCompositeInsert = 82,
    OpCopyObject = 83,
    OpTranspose = 84,
    OpSampledImage = 86,
    OpImageSampleImplicitLod = 87,
    OpImageSampleExplicitLod = 88,
    OpImageSampleDrefImplicitLod = 89,
    OpImageSampleDrefExplicitLod = 90,
    OpImageSampleProjImplicitLod = 91,
    OpImageSampleProjExplicitLod = 92,
    OpImageSampleProjDrefImplicitLod = 93,
    OpImageSampleProjDrefExplicitLod = 94,
    OpImageFetch = 95,
    OpImageGather = 96,
    OpImageDrefGather = 97,
    OpImageRead = 98,
    OpImageWrite = 99,
    OpImageQueryDim = 100,
    OpImageQueryFormat = 101,
    OpImageQueryOrder = 102,
    OpImageQuerySizeLod = 103,
    OpImageQuerySize = 104,
    OpImageQueryLod = 105,
    OpImageQueryLevels = 106,
    OpImageQuerySamples = 107,
    OpConvertFToU = 109,
    OpConvertFToS = 110,
    OpConvertSToF = 111,
    OpConvertUToF = 112,
    OpUConvert = 113,
    OpSConvert = 114,
    OpFConvert = 115,
    OpQuantizeToF16 = 116,
    OpConvertPtrToU = 117,
    OpSatConvertSToU = 118,
    OpSatConvertUToS = 119,
    OpConvertUToPtr = 120,
    OpPtrCastToGeneric = 121,
    OpGenericCastToPtr = 122,
    OpGenericCastToPtrExplicit = 123,
    OpBitcast = 124,
    OpSNegate = 126,
    OpFNegate = 127,
    OpIAdd = 128,
    OpFAdd = 129,
    OpISub = 130,
    OpFSub = 131,
    OpIMul = 132,
    OpFMul = 133,
    OpUDiv = 134,
    OpSDiv = 135,
    OpFDiv = 136,
    OpUMod = 137,
    OpSRem = 138,
    OpSMod = 139,
    OpFRem = 140,
    OpFMod = 141,
    OpVectorTimesScalar = 142,
    OpMatrixTimesScalar = 143,
    OpVectorTimesMatrix = 144,
    OpMatrixTimesVector = 145,
    OpMatrixTimesMatrix = 146,
    OpOuterProduct = 147,
    OpDot = 148,
    OpIAddCarry = 149,
    OpISubBorrow = 150,
    OpIMulExtended = 151,
    OpAny = 154,
    OpAll = 155,
    OpIsNan = 156,
    OpIsInf = 157,
    OpIsFinite = 158,
    OpIsNormal = 159,
    OpSignBitSet = 160,
    OpLessOrGreater = 161,
    OpOrdered = 162,
    OpUnordered = 163,
    OpLogicalEqual = 164,
    OpLogicalNotEqual = 165,
    OpLogicalOr = 166,
    OpLogicalAnd = 167,
    OpLogicalNot = 168,
    OpSelect = 169,
    OpIEqual = 170,
    OpINotEqual = 171,
    OpUGreaterThan = 172,
    OpSGreaterThan = 173,
    OpUGreaterThanEqual = 174,
    OpSGreaterThanEqual = 175,
    OpULessThan = 176,
    OpSLessThan = 177,
    OpULessThanEqual = 178,
    OpSLessThanEqual = 179,
    OpFOrdEqual = 180,
    OpFUnordEqual = 181,
    OpFOrdNotEqual = 182,
    OpFUnordNotEqual = 183,
    OpFOrdLessThan = 184,
    OpFUnordLessThan = 185,
    OpFOrdGreaterThan = 186,
    OpFUnordGreaterThan = 187,
    OpFOrdLessThanEqual = 188,
    OpFUnordLessThanEqual = 189,
    OpFOrdGreaterThanEqual = 190,
    OpFUnordGreaterThanEqual = 191,
    OpShiftRightLogical = 194,
    OpShiftRightArithmetic = 195,
    OpShiftLeftLogical = 196,
    OpBitwiseOr = 197,
    OpBitwiseXor = 198,
    OpBitwiseAnd = 199,
    OpNot = 200,
    OpBitFieldInsert = 201,
    OpBitFieldSExtract = 202,
    OpBitFieldUExtract = 203,
    OpBitReverse = 204,
    OpBitCount = 205,
    OpDPdx = 207,
    OpDPdy = 208,
    OpFwidth = 209,
    OpDPdxFine = 210,
    OpDPdyFine = 211,
    OpFwidthFine = 212,
    OpDPdxCoarse = 213,
    OpDPdyCoarse = 214,
    OpFwidthCoarse = 215,
    OpEmitVertex = 218,
    OpEndPrimitive = 219,
    OpEmitStreamVertex = 220,
    OpEndStreamPrimitive = 221,
    OpControlBarrier = 224,
    OpMemoryBarrier = 225,
    OpAtomicLoad = 227,
    OpAtomicStore = 228,
    OpAtomicExchange = 229,
    OpAtomicCompareExchange = 230,
    OpAtomicCompareExchangeWeak = 231,
    OpAtomicIIncrement = 232,
    OpAtomicIDecrement = 233,
    OpAtomicIAdd = 234,
    OpAtomicISub = 235,
    OpAtomicSMin = 236,
    OpAtomicUMin = 237,
    OpAtomicSMax = 238,
    OpAtomicUMax = 239,
    OpAtomicAnd = 240,
    OpAtomicOr = 241,
    OpAtomicXor = 242,
    OpPhi = 245,
    OpLoopMerge = 246,
    OpSelectionMerge = 247,
    OpLabel = 248,
    OpBranch = 249,
    OpBranchConditional = 250,
    OpSwitch = 251,
    OpKill = 252,
    OpReturn = 253,
    OpReturnValue = 254,
    OpUnreachable = 255,
    OpLifetimeStart = 256,
    OpLifetimeStop = 257,
    OpAsyncGroupCopy = 259,
    OpWaitGroupEvents = 260,
    OpGroupAll = 261,
    OpGroupAny = 262,
    OpGroupBroadcast = 263,
    OpGroupIAdd = 264,
    OpGroupFAdd = 265,
    OpGroupFMin = 266,
    OpGroupUMin = 267,
    OpGroupSMin = 268,
    OpGroupFMax = 269,
    OpGroupUMax = 270,
    OpGroupSMax = 271,
    OpReadPipe = 274,
    OpWritePipe = 275,
    OpReservedReadPipe = 276,
    OpReservedWritePipe = 277,
    OpReserveReadPipePackets = 278,
    OpReserveWritePipePackets = 279,
    OpCommitReadPipe = 280,
    OpCommitWritePipe = 281,
    OpIsValidReserveId = 282,
    OpGetNumPipePackets = 283,
    OpGetMaxPipePackets = 284,
    OpGroupReserveReadPipePackets = 285,
    OpGroupReserveWritePipePackets = 286,
    OpGroupCommitReadPipe = 287,
    OpGroupCommitWritePipe = 288,
    OpEnqueueMarker = 291,
    OpEnqueueKernel = 292,
    OpGetKernelNDrangeSubGroupCount = 293,
    OpGetKernelNDrangeMaxSubGroupSize = 294,
    OpGetKernelWorkGroupSize = 295,
    OpGetKernelPreferredWorkGroupSizeMultiple = 296,
    OpRetainEvent = 297,
    OpReleaseEvent = 298,
    OpCreateUserEvent = 299,
    OpIsValidEvent = 300,
    OpSetUserEventStatus = 301,
    OpCaptureEventProfilingInfo = 302,
    OpGetDefaultQueue = 303,
    OpBuildNDRange = 304,
    OpLastValue = 305
}